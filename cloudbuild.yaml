steps:
  # --- PASO 1: Obtener TODOS los secretos ---
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        # Usamos echo -n "$(...)" para capturar el valor exacto SIN newline
        echo -n "$(gcloud secrets versions access latest --secret="RECAPTCHA_SITE_KEY")" > /workspace/recaptcha-key.txt
        echo -n "$(gcloud secrets versions access latest --secret="BACKEND_URL")" > /workspace/backend-url.txt
        echo -n "$(gcloud secrets versions access latest --secret="CHATBOT_ENABLED")" > /workspace/chatbot-enabled.txt
        
        # Depuración segura (para verificar el build)
        echo "============================================="
        echo "DEPURACIÓN DE SECRETOS (VERIFICANDO LONGITUDES)"
        echo "  RECAPTCHA_SITE_KEY: $(cat /workspace/recaptcha-key.txt | wc -c) caracteres"
        echo "  BACKEND_URL: $(cat /workspace/backend-url.txt | wc -c) caracteres"
        echo "  CHATBOT_ENABLED: $(cat /workspace/chatbot-enabled.txt | wc -c) caracteres"
        echo "============================================="
    id: Get Secrets

  # --- PASO 2: Construir la imagen (CON LA URL CORRECTA) ---
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        docker build \
          --no-cache \
          --build-arg NEXT_PUBLIC_RECAPTCHA_SITE_KEY=$(cat /workspace/recaptcha-key.txt) \
          --build-arg NEXT_PUBLIC_BACKEND_URL=$(cat /workspace/backend-url.txt) \
          --build-arg NEXT_PUBLIC_CHATBOT_ENABLED=$(cat /workspace/chatbot-enabled.txt) \
          --tag="$_AR_HOSTNAME/$_AR_PROJECT_ID/$_AR_REPOSITORY/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA" \
          .
    id: Build
    waitFor:
      - Get Secrets

  # --- PASO 3: Subir la imagen (CON LA URL CORRECTA) ---
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', '$_AR_HOSTNAME/$_AR_PROJECT_ID/$_AR_REPOSITORY/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA']
    id: Push
    waitFor:
      - Build

  # --- PASO 4: Desplegar la nueva imagen (CON LA URL CORRECTA) ---
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - '$_SERVICE_NAME' # <-- Usa la variable del servicio
      - '--image'
      - '$_AR_HOSTNAME/$_AR_PROJECT_ID/$_AR_REPOSITORY/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA' # <-- Usa la URL completa
      - '--region'
      - '$_DEPLOY_REGION' # <-- Usa la variable de la región
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--service-account'
      - '251107984645-compute@developer.gserviceaccount.com'
      - '--memory'
      - '512Mi'
      - '--cpu'
      - '1'
      - '--concurrency'
      - '100'
      - '--timeout'
      - '300'
      - '--max-instances'
      - '10'
      - '--min-instances'
      - '0'
    id: Deploy
    waitFor:
      - Push

images:
  # --- Lista la imagen (CON LA URL CORRECTA) ---
  - '$_AR_HOSTNAME/$_AR_PROJECT_ID/$_AR_REPOSITORY/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA'

# --- Esta opción de logging ya la tenías y es correcta ---
options:
  logging: CLOUD_LOGGING_ONLY